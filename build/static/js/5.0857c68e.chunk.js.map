{"version":3,"sources":["components/users/Users.styled.jsx","components/users/Users.jsx","containers/users/usersLanding/UsersLanding.jsx"],"names":["TableWrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","CreateButton","a","_templateObject2","columns","title","dataIndex","key","width","render","text","record","react_default","createElement","space","size","onClick","e","onUpPassUni","nombre","apellidos","idUsuario","index_es","icon","faKey","className","href","onUpdate","id","email","nombreUsuario","rol","id_grupo","grupo","faEdit","onDelete","faTimes","petActPw","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","swal","carga","button","allowOutsideClick","axios","get","concat","then","response","status","window","location","reload","catch","error","timer","stop","_x","apply","this","arguments","_ref3","_callee3","apellido","_context3","Swal","fire","html","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","focusConfirm","result","isConfirmed","_x2","_x3","_x4","onCreate","_ref4","_callee4","usuarioLogeado","tipo","grupos","peticion","_context4","JSON","parse","localStorage","getItem","es_admin","groups","sent","preConfirm","Enombre","getPopup","querySelector","value","Eapellidos","Eemail","EnombreUsuario","Epassword","Etipo","length","showValidationMessage","Egrupo","resulta","username","password","password_confirmation","peticionCrear","resulta1","peticionCrearAxios","_ref5","_callee5","ruta","_context5","post","_x5","_x6","_ref6","_callee6","_context6","_x7","_x8","buttons","dangerMode","willDelete","delete","id_profesor","clear","data","_ref7","_callee7","_context7","i","abrupt","_x9","_x10","_x11","_ref8","_callee8","_context8","put","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_x21","pagination","position","Users","useContext","User","token","_useState","useState","_useState2","slicedToArray","datos1","setDatos1","array1","useEffect","_callee9","_context9","push","nombre_grupo","_useState3","bordered","loading","showHeader","rowSelection","scroll","undefined","hasData","tableLayout","top","bottom","xScroll","yScroll","_useState4","state","y","x","tableColumns","map","item","objectSpread","ellipsis","fixed","Fragment","onCreateBut","table","assign","dataSource","UsersLanding","SideNav","SearchBar","users_Users"],"mappings":"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","file":"static/js/5.0857c68e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TableWrapper = styled.div`\n  & .users-table {\n    & table {\n      border-collapse: separate;\n      border-spacing: 0 0.3rem;\n    }\n    & .ant-table-selection,\n    .ant-checkbox-wrapper {\n      display: none;\n    }\n    & tr {\n      height: 5rem;\n      font-size: 17px;\n      &:hover > td {\n        background-color: #6bb1c5;\n      }\n    }\n    & thead tr th {\n      background-color: #0a1128;\n      color: #fefcfb;\n    }\n    & tr td {\n      background-color: #0a1128;\n      color: #fefcfb;\n    }\n    & tr td:first-child,\n    tr th:first-child {\n      border-top-left-radius: 0.3rem;\n      border-bottom-left-radius: 0.3rem;\n    }\n    & tr td:last-child,\n    tr th:last-child {\n      border-top-right-radius: 0.3rem;\n      border-bottom-right-radius: 0.3rem;\n    }\n    & .ant-table-column-has-sorters:hover {\n      background-color: #6bb1c5;\n    }\n    & td div div {\n      &:first-child {\n        a path {\n          fill: #3d6e9c;\n        }\n      }\n      &:last-child {\n        a path {\n          fill: #c56b6b;\n        }\n      }\n      & a {\n        padding: 0rem 0rem;\n        border: none;\n        border-radius: 0.2rem;\n        font-weight: 400;\n        text-decoration: none;\n      }\n    }\n  }\n`;\n\nexport const CreateButton = styled.a`\n  display: block;\n  width: 160px;\n  height: 45px;\n  background: #6bb1c5;\n  padding: 10px;\n  margin-bottom: 2rem;\n  text-align: center;\n  border-radius: 5px;\n  color: white;\n  font-weight: bold;\n  background-color: #6bb1c5;\n  text-decoration: none;\n  box-shadow: 0rem 0.2rem 0.2rem 0rem #bdbdbd;\n  float: right;\n  &:hover {\n    color: white;\n  }\n`;\n","import { Table, Space } from \"antd\";\nimport React, { useEffect, useState, createContext, useContext } from \"react\";\nimport { User } from \"../../App\";\nimport axios from \"../common/http\";\nimport swal from \"sweetalert\";\nimport carga from \"../../assets/img/load/ajax-loader.gif\";\nimport { CreateButton, TableWrapper } from \"./Users.styled\";\nimport Swal from \"sweetalert2\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTimes, faKey } from \"@fortawesome/free-solid-svg-icons\";\n\n// import { Link, useHistory } from \"react-router-dom\";\n\n// const history = useHistory();\nconst columns = [\n  {\n    title: \"Usuario\",\n    dataIndex: \"nombreUsuario\",\n    //sorter: (a, b) => a.nombreUsuario - b.nombreUsuario,\n  },\n  {\n    title: \"Nombre\",\n    dataIndex: \"nombre\",\n    //sorter: (a, b) => a.nombre - b.nombre,\n  },\n  {\n    title: \"Apellidos\",\n    dataIndex: \"apellidos\",\n    //sorter: (a, b) => a.apellidos - b.apellidos,\n  },\n  {\n    title: \"Grupo\",\n    dataIndex: \"grupo\",\n    //sorter: (a, b) => a.grupo - b.grupo,\n  },\n  {\n    title: \"Email\",\n    dataIndex: \"email\",\n    //sorter: (a, b) => a.email - b.email,\n  },\n  {\n    title: \"Rol\",\n    dataIndex: \"rol\",\n    //sorter: (a, b) => a.rol - b.rol,\n  },\n  {\n    title: \"\",\n    key: \"accion\",\n    width: 300,\n    dataIndex: \"accion\",\n    render: (text, record) => (\n      <Space size=\"middle\">\n        <a\n          title=\"Contraseña\"\n          onClick={(e) => {\n            onUpPassUni(record.nombre, record.apellidos, record.idUsuario);\n          }}\n        >\n          <FontAwesomeIcon icon={faKey} className=\"view-icon\" />\n        </a>\n\n        <a\n          href=\"http://localhost:3000/usuarios\"\n          title=\"Editar\"\n          onClick={(e) => {\n            onUpdate(\n              record.id,\n              record.nombre,\n              record.apellidos,\n              record.email,\n              record.nombreUsuario,\n              record.idUsuario,\n              record.rol,\n              record.id_grupo,\n              record.grupo,\n              e\n            );\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} className=\"edit-icon\" />\n        </a>\n        <a\n          href=\"http://localhost:3000/usuarios\"\n          title=\"Eliminar\"\n          onClick={(e) => {\n            onDelete(record.idUsuario);\n          }}\n        >\n          <FontAwesomeIcon icon={faTimes} className=\"delete-icon\" />\n        </a>\n      </Space>\n    ),\n  },\n];\n\nconst data = [];\n// for (let i = 1; i <= 10; i++) {\n//   data.push({\n//     key: i,\n//     nombre: \"profesor\",\n//     apellidos: `profesor`,\n//     rol: `${i % 2 ? \"Profesor\" : \"Alumno\"}`,\n//   });\n// }\n\nconst onCreateBut = () => {\n  const usuarioLogeado = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (usuarioLogeado) {\n    if (usuarioLogeado.id_profesor) {\n      return (\n        <CreateButton\n          className=\"btn \"\n          onClick={(e) => {\n            onCreate();\n          }}\n        >\n          + Crear usuario\n        </CreateButton>\n      );\n    } else {\n    }\n  }\n};\n\nconst onUpPass = async () => {\n  const usuarioLogeado = JSON.parse(localStorage.getItem(\"user\"));\n  if (usuarioLogeado.id_profesor) {\n    //seleccionar usuario, si es admin el conectado también a profesores\n  } else {\n    //petición de su contraseña\n  }\n};\n\nconst petActPw = async (idUsuario) => {\n  swal({\n    title: \"Se enviará un mail al usuario para que se valide ...\",\n    icon: carga,\n    button: false,\n    allowOutsideClick: false,\n  });\n  await axios\n    .get(`update-pw/${idUsuario}`)\n    .then((response) => {\n      //console.log(response.data);\n      if (response.status >= 200 && response.status <= 205) {\n        //console.log(response.data[1].nombre);\n        //console.log(response.data);\n        window.location.reload(true);\n      }\n    })\n    .catch(function (error) {\n      if (error.status == 401) {\n        swal({\n          title: \"Error acceso \" + error.response.status,\n          text: \"Error, no tienes acceso a esta sección.\",\n          icon: \"error\",\n          button: \"Aceptar\",\n          timer: \"3000\",\n        });\n      } else {\n        swal({\n          title: \"Error interno \" + error.response.status,\n          text: \"Error interno, vuelve a intentarlo en unos momentos.\",\n          icon: \"error\",\n          button: \"Aceptar\",\n          timer: \"3000\",\n        });\n      }\n    });\n};\n\nconst onUpPassUni = async (nombre, apellido, idUsuario) => {\n  Swal.fire({\n    title: \"Solicitud de nueva contraseña\",\n    html: `¿ Seguro que deseas solicitar una nueva contraseña para <b> ${nombre} ${apellido} </b> ?<br>&nbsp;<br>\n    Esta acción dejará el usuario inhabilitado hasta que actualice su contraseña.`,\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Solicitar\",\n    cancelButtonText: \"Cancelar\",\n    focusConfirm: false,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      petActPw(idUsuario);\n    } else {\n      //swal(\"Cancelado\");\n    }\n  });\n};\n\nconst onCreate = async () => {\n  const usuarioLogeado = JSON.parse(localStorage.getItem(\"user\"));\n\n  // let adm = `<input type=\"hidden\" class=\"swal2-input\" id='Eadmin'>`;\n  let tipo = `<option value=\"al\" selected=\"\">Alumno</option>`;\n  if (usuarioLogeado.es_admin) {\n    tipo = `<option value=\"al\" selected=\"\">Alumno</option>\n    <option value=\"pr\">Profesor</option>`;\n  }\n\n  const grupos = await groups(\"Profesor\", 0, \"\");\n  var peticion = [];\n  var ruta = \"\";\n\n  Swal.fire({\n    title: \"Crear usuario\",\n    html: `<label for='EnombreUsuario'>Nombre inicio sesión:</label>\n    <input class=\"swal2-input\" id='EnombreUsuario' type='text' placeholder=\"Nombre usuario\">\n    <label for='Epassword'>Password:</label>\n    <input class=\"swal2-input\" id='Epassword' type='password' placeholder=\"Contraseña\">\n    <label for='Enombre'>Nombre:</label>\n    <input class=\"swal2-input\" id='Enombre' type='text' placeholder=\"Nombre\">\n    <label for='Eapellidos'>Apellidos:</label>\n    <input class=\"swal2-input\" id='Eapellidos' type='text' placeholder=\"Apellidos\">\n    <label for='Eemail'>Email:</label>\n    <input class=\"swal2-input\" id='Eemail' type='email' placeholder=\"Email\">\n    <label for=\"Etipo\">Tipo usuario:</label><br>\n    <select class=\"swal2-input\" id=\"Etipo\">\n    ${tipo}\n    </select>`, //${grupos}\n    // <input id='Eprofe' type='checkbox'>\n    // <label class=\"swal2-input\" for='Eprofe'>&nbsp;Es profesor</label><br>\n    // <input id='Eadmin' type='checkbox'>\n    // <label class=\"swal2-input\" for='Eadmin'>&nbsp;Es admin</label>\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Crear\",\n    cancelButtonText: \"Cancelar\",\n    focusConfirm: false,\n    preConfirm: () => {\n      const Enombre = Swal.getPopup().querySelector(\"#Enombre\").value;\n      const Eapellidos = Swal.getPopup().querySelector(\"#Eapellidos\").value;\n      const Eemail = Swal.getPopup().querySelector(\"#Eemail\").value;\n      const EnombreUsuario =\n        Swal.getPopup().querySelector(\"#EnombreUsuario\").value;\n      const Epassword = Swal.getPopup().querySelector(\"#Epassword\").value;\n      const Etipo = Swal.getPopup().querySelector(\"#Etipo\").value;\n      //const Eadmin = Swal.getPopup().querySelector(\"#Eadmin\").checked;\n      //alert(Egrupo);\n      //const Eprofe = Swal.getPopup().querySelector(\"#Eprofe\").checked;\n      //const Eadmin = Swal.getPopup().querySelector(\"#Eadmin\").checked;\n      if (!Enombre || !Eapellidos || !Eemail || !EnombreUsuario || !Epassword) {\n        Swal.showValidationMessage(`Algún campo obligatorio vacío`);\n      } else if (EnombreUsuario.length < 6 || Epassword.length < 6) {\n        Swal.showValidationMessage(\n          `Nombre de usuario o password inferior a 6 digitos`\n        );\n      }\n      return {\n        Enombre: Enombre,\n        Eapellidos: Eapellidos,\n        Eemail: Eemail,\n        EnombreUsuario: EnombreUsuario,\n        Epassword: Epassword,\n        Etipo: Etipo,\n        //Eadmin: Eadmin,\n      };\n    },\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (result.value.Etipo == \"al\") {\n        Swal.fire({\n          title: \"Quieres asignarle un grupo\",\n          html: `${grupos}`,\n          icon: \"question\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Asignar\",\n          cancelButtonText: \"Continuar sin asignar\",\n          preConfirm: () => {\n            const Egrupo = Swal.getPopup().querySelector(\"#Egrupo\").value;\n            return {\n              Egrupo: Egrupo,\n            };\n          },\n        }).then((resulta) => {\n          if (resulta.isConfirmed) {\n            if (resulta.value.Egrupo == \"-1\") {\n              peticion = {\n                nombre: `${result.value.Enombre}`,\n                apellidos: `${result.value.Eapellidos}`,\n                email: `${result.value.Eemail}`,\n                username: `${result.value.EnombreUsuario}`,\n                password: `${result.value.Epassword}`,\n                password_confirmation: `${result.value.Epassword}`,\n                id_grupo: null,\n              };\n            } else {\n              peticion = {\n                nombre: `${result.value.Enombre}`,\n                apellidos: `${result.value.Eapellidos}`,\n                email: `${result.value.Eemail}`,\n                username: `${result.value.EnombreUsuario}`,\n                password: `${result.value.Epassword}`,\n                password_confirmation: `${result.value.Epassword}`,\n                id_grupo: `${resulta.value.Egrupo}`,\n              };\n            }\n          } else {\n            peticion = {\n              nombre: `${result.value.Enombre}`,\n              apellidos: `${result.value.Eapellidos}`,\n              email: `${result.value.Eemail}`,\n              username: `${result.value.EnombreUsuario}`,\n              password: `${result.value.Epassword}`,\n              password_confirmation: `${result.value.Epassword}`,\n              id_grupo: null,\n            };\n          }\n          ruta = \"register-alumno\";\n          peticionCrear(peticion, ruta);\n        });\n      } else {\n        if (usuarioLogeado.es_admin) {\n          Swal.fire({\n            title: \"¿Quieres que sea administrador?\",\n            text: \"Cuidado, un usuario administrador tendrá total dominio de la aplicación, contenido y usuarios, solo otorga estos permisos a usuarios que sean de tu confianza\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#d33\",\n            cancelButtonColor: \"#3085d6\",\n            confirmButtonText: \"Administrador\",\n            cancelButtonText: \"Profesor\",\n          }).then((resulta1) => {\n            if (resulta1.isConfirmed) {\n              peticion = {\n                nombre: `${result.value.Enombre}`,\n                apellidos: `${result.value.Eapellidos}`,\n                email: `${result.value.Eemail}`,\n                username: `${result.value.EnombreUsuario}`,\n                password: `${result.value.Epassword}`,\n                password_confirmation: `${result.value.Epassword}`,\n                es_admin: true,\n              };\n            } else {\n              peticion = {\n                nombre: `${result.value.Enombre}`,\n                apellidos: `${result.value.Eapellidos}`,\n                email: `${result.value.Eemail}`,\n                username: `${result.value.EnombreUsuario}`,\n                password: `${result.value.Epassword}`,\n                password_confirmation: `${result.value.Epassword}`,\n                es_admin: false,\n              };\n            }\n            ruta = \"register-profesor\";\n            peticionCrear(peticion, ruta);\n          });\n        }\n      }\n    }\n  });\n};\nconst peticionCrearAxios = async (peticion, ruta) => {\n  swal({\n    title: \"Se enviará un mail al usuario para que se valide ...\",\n    icon: carga,\n    button: false,\n    allowOutsideClick: false,\n  });\n  await axios\n    .post(ruta, peticion)\n    .then((response) => {\n      //console.log(response.data);\n      if (response.status >= 200 && response.status <= 205) {\n        //console.log(response.data[1].nombre);\n        //console.log(response.data);\n        window.location.reload(true);\n      }\n    })\n    .catch(function (error) {\n      if (error.status == 401) {\n        swal({\n          title: \"Error acceso \" + error.response.status,\n          text: \"Error, no tienes acceso a esta sección.\",\n          icon: \"error\",\n          button: \"Aceptar\",\n          timer: \"3000\",\n        });\n      } else {\n        swal({\n          title: \"Error interno \" + error.response.status,\n          text: \"Error interno, vuelve a intentarlo en unos momentos.\",\n          icon: \"error\",\n          button: \"Aceptar\",\n          timer: \"3000\",\n        });\n      }\n    });\n};\n\nconst peticionCrear = async (peticion, ruta) => {\n  Swal.fire({\n    title: \"Revisión de datos\",\n    html: `${peticion.username}, ${peticion.nombre}, ${peticion.apellidos}, ${peticion.email}`,\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Enviar\",\n    cancelButtonText: \"Cancelar\",\n  }).then((resulta1) => {\n    if (resulta1.isConfirmed) {\n      peticionCrearAxios(peticion, ruta);\n    } else {\n      swal({ title: \"Cancelado por el usuario\" });\n    }\n  });\n};\n\nconst onDelete = (id) => {\n  swal({\n    title: \"¿Estás seguro?\",\n    text: \"Una vez eliminado no podrás volver a recuperar el usuario\",\n    icon: \"warning\",\n    buttons: true,\n    dangerMode: true,\n  }).then((willDelete) => {\n    if (willDelete) {\n      //SI\n      //console.log(rol);\n\n      swal({\n        //title: \"Comprobando ...\",\n        icon: carga,\n        button: false,\n        allowOutsideClick: false,\n      });\n      axios\n        .delete(\"delete-usuario/\" + id)\n        .then((response) => {\n          //console.log(response.data);\n          if (response.status >= 200 && response.status <= 205) {\n            var usuarioLogeado = JSON.parse(localStorage.getItem(\"user\"));\n            if (usuarioLogeado.id_profesor) {\n              window.location.reload(true);\n            } else {\n              localStorage.clear();\n              window.location.href = \"/\";\n            }\n            swal({\n              title: \"Usuario eliminado\",\n              text: \"  \",\n              icon: \"success\",\n              button: false,\n              timer: \"1800\",\n            });\n          }\n        })\n        .catch(function (error) {\n          //console.log(\"EEEEEEEEEEEEEEEE\", error, \"AAAAAAAAAAAAAAAAAAA\");\n          if (error.status == 401) {\n            swal({\n              title: \"Error acceso \" + error.response.status,\n              text: \"Error, no tienes acceso a esta sección.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          } else {\n            //console.log(error.response.data[\"Error\"]);\n            if (\n              error.response.data[\"Error\"] ==\n              \"No es posible borrar usuarios administradores\"\n            ) {\n              swal({\n                title: \"Error \" + error.response.status,\n                text: \"Solo el usuario master puede eliminar cuentas de administradores, pongase en contacto con master para eliminarlo, puede bloquear el usuario cambiando su correo electronico y contraseña mientras se atiende su solicitud\",\n                icon: \"error\",\n                button: \"Aceptar\",\n                timer: \"5000\",\n              });\n            } else {\n              swal({\n                title: \"Error interno \" + error.response.status,\n                text: \"Error interno, vuelve a intentarlo en unos momentos.\",\n                icon: \"error\",\n                button: \"Aceptar\",\n                timer: \"3000\",\n              });\n            }\n          }\n        });\n    } else {\n      //swal(\"Usuario no eliminado\");\n    }\n  });\n\n  //console.log(key, e);\n};\n\nconst groups = async (rol, id_grupo, grupo) => {\n  let grupos = `<input type=\"hidden\" class=\"swal2-input\" id='Egrupo' type='text' value=\"null\">`;\n  //console.log(rol, \"AAAAAAAAAAAAAAAAAAAAAA\");\n  var usuarioLogeado = JSON.parse(localStorage.getItem(\"user\"));\n  if (usuarioLogeado.id_profesor) {\n    if (rol == \"Alumno\") {\n      //console.log(grupos, \"BBBBBBBBBBB\");\n      await axios\n        .get(\"grupos\")\n        .then((response) => {\n          //console.log(response.data);\n          if (response.status >= 200 && response.status <= 205) {\n            grupos = `<label for='Egrupo'>Grupo:</label><br>\n                        <select class=\"swal2-input\" id=\"Egrupo\">`;\n            if (id_grupo) {\n              grupos += `<option value=\"-1\">Sin grupo</option>`;\n            } else {\n              grupos += `<option value=\"-1\" selected>Sin grupo</option>`;\n            }\n            for (let i = 0; i < response.data.length; i++) {\n              if (grupo == response.data[i].nombre) {\n                grupos += `<option value=\"${response.data[i].id}\" selected>${response.data[i].nombre}</option>`;\n              } else {\n                grupos += `<option value=\"${response.data[i].id}\">${response.data[i].nombre}</option>`;\n              }\n            }\n            grupos += `</select>`;\n          }\n        })\n        .catch(function (error) {\n          if (error.status == 401) {\n            swal({\n              title: \"Error acceso \" + error.response.status,\n              text: \"Error, no tienes acceso a esta sección.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          } else {\n            swal({\n              title: \"Error interno \" + error.response.status,\n              text: \"Error interno, vuelve a intentarlo en unos momentos.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          }\n        });\n    } else if (rol == \"Profesor\") {\n      await axios\n        .get(\"grupos\")\n        .then((response) => {\n          //console.log(response.data);\n          if (response.status >= 200 && response.status <= 205) {\n            grupos = `<label for='Egrupo'>Grupo:</label><br>\n                        <select class=\"swal2-input\" id=\"Egrupo\">\n                          <option value=\"-1\" selected>Sin grupo</option>`;\n\n            for (let i = 0; i < response.data.length; i++) {\n              grupos += `<option value=\"${response.data[i].id}\" >${response.data[i].nombre}</option>`;\n            }\n            grupos += `</select>`;\n          }\n        })\n        .catch(function (error) {\n          if (error.status == 401) {\n            swal({\n              title: \"Error acceso \" + error.response.status,\n              text: \"Error, no tienes acceso a esta sección.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          } else {\n            swal({\n              title: \"Error interno \" + error.response.status,\n              text: \"Error interno, vuelve a intentarlo en unos momentos.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          }\n        });\n    }\n    //console.log(\"ALUMNO\");\n    //columns.splice(5);\n  }\n  return grupos;\n  //console.log(grupos, \"BBBBBBBBBBB\");\n};\n\nconst onUpdate = async (\n  key,\n  nombre,\n  apellidos,\n  email,\n  nombreUsuario,\n  idUsuario,\n  rol,\n  id_grupo,\n  grupo,\n  e\n) => {\n  //e.preventDefault();\n  //const data = this.state.data.filter(item => item.key !== key);\n  //this.setState({ data, isPageTween: false });\n  //console.log(key, e);\n  //history.push(\"/editUsuario\");\n  const grupos = await groups(rol, id_grupo, grupo);\n  //console.log(grupos, \"AAAAAAAAAAAAAAAAAAAAAA\");\n  Swal.fire({\n    title: \"Editar\",\n    html: `<label for='EnombreUsuario'>Usuario:</label>\n    <input class=\"swal2-input\" id='EnombreUsuario' type='text' value=${nombreUsuario}>\n    <label for='Enombre'>Nombre:</label>\n    <input class=\"swal2-input\" id='Enombre' type='text' value=${nombre}>\n    <label for='Eapellidos'>Apellidos:</label>\n    <input class=\"swal2-input\" id='Eapellidos' type='text' value=${apellidos}>\n    <label for='Eemail'>Email:</label>\n    <input class=\"swal2-input\" id='Eemail' type='email' value=${email}>\n    ${grupos}\n    `,\n    // <input id='Eprofe' type='checkbox'>\n    // <label class=\"swal2-input\" for='Eprofe'>&nbsp;Es profesor</label><br>\n    // <input id='Eadmin' type='checkbox'>\n    // <label class=\"swal2-input\" for='Eadmin'>&nbsp;Es admin</label>\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Editar\",\n    cancelButtonText: \"Cancelar\",\n    focusConfirm: false,\n    preConfirm: () => {\n      const Enombre = Swal.getPopup().querySelector(\"#Enombre\").value;\n      const Eapellidos = Swal.getPopup().querySelector(\"#Eapellidos\").value;\n      const Eemail = Swal.getPopup().querySelector(\"#Eemail\").value;\n      const EnombreUsuario =\n        Swal.getPopup().querySelector(\"#EnombreUsuario\").value;\n      const Egrupo = Swal.getPopup().querySelector(\"#Egrupo\").value;\n      //alert(Egrupo);\n      //const Eprofe = Swal.getPopup().querySelector(\"#Eprofe\").checked;\n      //const Eadmin = Swal.getPopup().querySelector(\"#Eadmin\").checked;\n      if (!Enombre || !Eapellidos || !Eemail || !EnombreUsuario) {\n        Swal.showValidationMessage(`Algún campo obligatorio vacío`);\n      }\n      return {\n        Enombre: Enombre,\n        Eapellidos: Eapellidos,\n        Eemail: Eemail,\n        EnombreUsuario: EnombreUsuario,\n        Egrupo: Egrupo,\n        //Eadmin: Eadmin,\n      };\n    },\n  }).then((result) => {\n    if (result.isConfirmed) {\n      swal({\n        //title: \"Comprobando ...\",\n        icon: carga,\n        button: false,\n        allowOutsideClick: false,\n      });\n      let peticion = [];\n      if (result.value.Egrupo == \"-1\") {\n        peticion = {\n          nombre: `${result.value.Enombre}`,\n          apellidos: `${result.value.Eapellidos}`,\n          email: `${result.value.Eemail}`,\n          username: `${result.value.EnombreUsuario}`,\n          id_grupo: null,\n        };\n      } else if (result.value.Egrupo != \"null\") {\n        peticion = {\n          nombre: `${result.value.Enombre}`,\n          apellidos: `${result.value.Eapellidos}`,\n          email: `${result.value.Eemail}`,\n          username: `${result.value.EnombreUsuario}`,\n          id_grupo: `${result.value.Egrupo}`,\n        };\n      } else {\n        peticion = {\n          nombre: `${result.value.Enombre}`,\n          apellidos: `${result.value.Eapellidos}`,\n          email: `${result.value.Eemail}`,\n          username: `${result.value.EnombreUsuario}`,\n        };\n      }\n      axios\n        .put(\"update-usuario/\" + `${idUsuario}`, peticion)\n        .then((response) => {\n          //console.log(response.data);\n          if (response.status >= 200 && response.status <= 205) {\n            //console.log(response.data[1].nombre);\n            //console.log(response.data);\n            window.location.reload(true);\n            //Users.array1[key].nombreUsuario = response.data.nombreUsuario;\n            //Users.array1[key].nombre = response.data.nombre;\n            //Users.array1[key].apellidos = response.data.apellidos;\n\n            // swal({\n            //   icon: \"success\",\n            //   title: \"Actualizado\",\n            //   text: `\n            //     Usuario: ${result.value.EnombreUsuario}\n            //     Nombre: ${result.value.Enombre}\n            //     Apellidos: ${result.value.Eapellidos}\n            //     Email: ${result.value.Eemail}\n            //   `,\n            // });\n          }\n        })\n        .catch(function (error) {\n          if (error.status == 401) {\n            swal({\n              title: \"Error acceso \" + error.response.status,\n              text: \"Error, no tienes acceso a esta sección.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          } else {\n            swal({\n              title: \"Error interno \" + error.response.status,\n              text: \"Error interno, vuelve a intentarlo en unos momentos.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          }\n        });\n    }\n  });\n};\n\nconst showHeader = true;\n\nconst pagination = { position: \"bottom\" };\n\nconst Users = () => {\n  const { token } = useContext(User);\n  const [datos1, setDatos1] = useState();\n\n  const array = [];\n  const array1 = [];\n\n  useEffect(async () => {\n    //console.log(token, axios, \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaa\");\n    if (localStorage.getItem(\"token\") && localStorage.getItem(\"user\")) {\n      // console.log(user);\n      //if (user.id_profesor) {\n      var usuarioLogeado = JSON.parse(localStorage.getItem(\"user\"));\n      //console.log(usuarioLogeado);\n\n      //LARAVEL CONTROLA SI EL USUARIO QUE PIDE ES ADMIN O NO\n      await axios\n        .get(\"usuarios\")\n        .then((response) => {\n          //console.log(response.data);\n          if (response.status >= 200 && response.status <= 205) {\n            //console.log(response.data[1].nombre);\n            //console.log(response.data, response.data.length);\n            for (let i = 0; i < response.data.length; i++) {\n              //console.log(response.data[i]);\n              array1.push({\n                key: i,\n                nombreUsuario: response.data[i].nombreUsuario,\n                nombre: response.data[i].nombre,\n                apellidos: response.data[i].apellidos,\n                email: response.data[i].email,\n                id_grupo: response.data[i].id_grupo,\n                grupo: response.data[i].nombre_grupo,\n                rol: response.data[i].tipo,\n                id: response.data[i].id,\n                idUsuario: response.data[i].idUsuario,\n              });\n            }\n            //console.log(array1);\n\n            //history.push(\"/\");\n          }\n        })\n        .catch(function (error) {\n          if (error.status == 401) {\n            swal({\n              title: \"Error acceso \" + error.response.status,\n              text: \"Error, no tienes acceso a esta sección.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          } else {\n            swal({\n              title: \"Error interno \" + error.response.status,\n              text: \"Error interno, vuelve a intentarlo en unos momentos.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          }\n        });\n      //if (usuarioLogeado.id_profesor) {\n      //} else {\n      //console.log(\"ALUMNO\");\n      //columns.splice(5);\n      //}\n    }\n    //console.log(array1);\n    //console.log(array1);\n    setDatos1(array1);\n  }, []);\n\n  const [state, setState] = useState({\n    bordered: false,\n    loading: false,\n    pagination,\n    size: \"Middle\",\n    showHeader,\n    rowSelection: {},\n    scroll: undefined,\n    hasData: true,\n    tableLayout: \"fixed\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    xScroll: false,\n    yScroll: false,\n  });\n\n  const handleDataChange = (hasData) => {\n    this.setState({ hasData });\n  };\n\n  const scroll = {};\n  if (state.yScroll) {\n    scroll.y = 240;\n  }\n  if (state.xScroll) {\n    scroll.x = \"100vw\";\n  }\n\n  const tableColumns = columns.map((item) => ({\n    ...item,\n    ellipsis: state.ellipsis,\n  }));\n  if (state.xScroll === \"fixed\") {\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = \"right\";\n  }\n\n  return (\n    <>\n      {/* {onCreateBut()}\n      <div style={{ height: 100 }}>\n        <Table\n          {...state}\n          pagination={{ position: [state.top, state.bottom] }}\n          columns={tableColumns}\n          dataSource={datos1 ? datos1 : null}\n          scroll={scroll}\n        />\n      </div> */}\n      <TableWrapper>\n        {/* <CreateButton>+ Crear usuario</CreateButton>  */}\n        {onCreateBut()}\n        <Table\n          {...state}\n          pagination={{ position: [state.top, state.bottom] }}\n          columns={tableColumns}\n          dataSource={datos1 ? datos1 : null}\n          scroll={scroll}\n          className=\"users-table\"\n        />\n      </TableWrapper>\n    </>\n  );\n};\n\nexport default Users;\n","import React, { useContext } from \"react\";\n// import { User } from \"../../../App\";\nimport SideNavBar from \"../../../components/common/sideNav/SideNav\";\nimport SearchBar from \"../../../components/searchBar/SearchBar\";\nimport Users from \"../../../components/users/Users\";\n\nconst UsersLanding = () => {\n  // const { user } = useContext(User);\n\n  return (\n    <>\n      <SideNavBar />\n      <div className=\"container\">\n        <SearchBar />\n        <Users />\n      </div>\n    </>\n  );\n};\n\nexport default UsersLanding;\n"],"sourceRoot":""}